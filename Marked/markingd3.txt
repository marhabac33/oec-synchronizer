CSCC01 Deliverable 3 Marking Guide
-----------------------------------

Project Management:  (34/40%)

  Release plan:  (4/5)
  	*-1 no project velocity mentioned
    - each release corresponds to end of Sprint
    - project fully laid out:
      for each release date, list of user stories to implement
    - project velocity specified and used
    - highest priority user stories first modulo dependencies
    - reasonable goals for each release
  
  Product Backlog: (3/5)
  	*-1 user story 2.1 should be rewritten
	*-1 user story 2.4 and some others are too vague
    - user stories follow the correct format.
    - user stories, together, reflect all the user requirements (from
      all personas).
    - user stories correspond to actual requirements (no "invented"
      features).
    - user stories contain enough information for devs to estimate how
      long it would take to implement it.
    - each user story addresses one specific requirement (no "world
      peace" stories).

  Sprint Backlog(s): (4/5)
  	*-1 should still show these user stories in the product backlog
     - user stories taken from the Product Backlog
     - estimated costs
     - estimated values

  Sprint Plan(s): (3/5)
  	*-1 no mention of who is doing what each day
  	*-1 no project velocity mentioned
    - user stories divided into tasks when appropriate.
    - each Sprint Plan contains all the necessary information:
        who is working on which task on which day 
    - sum of costs of user stories in the sprint = project velocity
    - good planning decisions

  Use of Task Board: (5/5)
    - correct format of task boards
    - snapshots in the begginning and end of each Sprint are provided
    
  Use of Burndown Charts: (5/5)
    - snapshots in the begginning and end of each Sprint are provided
    - correctness of burndown charts

  Use of Repo: (5/5)
    (good use of branches not required here, but is required for next deliverable)

  Use of communication tools: (5/5)
     - evidence of using communication tools of their choice effectively


Design and Implementation: (30/30%)

   System Design: (5/5)
      - good modular design
      - general and easy to extend
      - it is clear how the current implementation is going to be
        extended into an application that satisfies the client's needs

   Implementation: (10/10)
     - 0 marks if it doesn't run
     - at least one feature is either fully implemented of nearly implemented
     - quality and maturity of code


Report:  (20/20%)

  - well-presented, is easy to read and to navigate
  - spelling and grammar
  - looks professional
  - quality of the README file


Interview: (10/10%)
